{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtkurt13\\\\Documents\\\\Emsig\\\\Emsig_Cards\\\\emsig-cards\\\\src\\\\components\\\\ButtonList.js\";\nimport React, { Component } from 'react';\nimport { MDBInput } from 'mdbreact';\nimport axios from 'axios';\nimport ButtonCard from './ButtonCard';\nexport default class ButtonList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"http://localhost:3000/users\",\n      button: null,\n      search: '',\n      cards: [],\n      selectedCard: []\n    };\n\n    this.onchange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.renderButton = button => {\n      if (this.state.button.length <= 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 20\n          }\n        }, \"Loading..\");\n      }\n\n      const {\n        search\n      } = this.state;\n      let combine = button.name + ' ' + button.description; // if(search !== \"\" && button.name.toLowerCase().indexOf(search.toLowerCase()) === -1 && button.description.toLowerCase().indexOf(search.toLowerCase()) === -1){\n      //     return null;\n      // }\n\n      if (search !== \"\" && combine.toLowerCase().indexOf(search.toLowerCase()) === -1) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(ButtonCard, {\n        key: button.name,\n        name: button.name,\n        url: button.url,\n        description: button.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(this.state.url);\n    this.setState({\n      button: res.data['data']\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      icon: \"search\",\n      label: \"Search\",\n      onChange: this.onchange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }))), this.state.button ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.state.button.map(button => {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 38\n        }\n      });\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Loading Buttons\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vtkurt13/Documents/Emsig/Emsig_Cards/emsig-cards/src/components/ButtonList.js"],"names":["React","Component","MDBInput","axios","ButtonCard","ButtonList","state","url","button","search","cards","selectedCard","onchange","e","setState","target","value","renderButton","length","combine","name","description","toLowerCase","indexOf","componentDidMount","res","get","data","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBInput } from 'mdbreact'\r\nimport axios from 'axios';\r\n\r\nimport ButtonCard from './ButtonCard'\r\n\r\nexport default class ButtonList extends Component {\r\n\r\n    state= {\r\n        url: \"http://localhost:3000/users\",\r\n        button: null,\r\n        search: '',\r\n        cards: [],\r\n        selectedCard: []\r\n\r\n    }\r\n\r\n    onchange = e => {\r\n        this.setState({search: e.target.value})\r\n        \r\n    }\r\n\r\n    renderButton = button => {\r\n        if (this.state.button.length <= 0) {\r\n            return <div>Loading..</div>\r\n        }\r\n\r\n        const {search} = this.state\r\n\r\n        let combine = button.name + ' ' + button.description\r\n        \r\n        // if(search !== \"\" && button.name.toLowerCase().indexOf(search.toLowerCase()) === -1 && button.description.toLowerCase().indexOf(search.toLowerCase()) === -1){\r\n        //     return null;\r\n        // }\r\n\r\n        if(search !== \"\" && combine.toLowerCase().indexOf(search.toLowerCase()) === -1 ){\r\n            return null;\r\n        }\r\n\r\n        return <ButtonCard\r\n            key={button.name}\r\n            name={button.name}\r\n            url={button.url} \r\n            description={button.description}\r\n        />\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(this.state.url);\r\n        this.setState({button: res.data['data']});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div className='row' >\r\n                    <div className='col'>\r\n                        <MDBInput icon=\"search\" label='Search' onChange={this.onchange}/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {this.state.button ? (\r\n                    <div className='row'>\r\n                        {this.state.button.map(button => {\r\n                            return ( <input type='checkbox'/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                ) : (\r\n                    <h1>Loading Buttons</h1>\r\n                    )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}