{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtkurt13\\\\Documents\\\\Emsig\\\\Emsig_Cards\\\\emsig-cards\\\\src\\\\components\\\\MultiSelect.js\";\nimport React, { Component } from 'react';\nimport Option from './Option';\nexport class MultiSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOptions: []\n    };\n    this.onOptionsChange = this.onOptionsChange.bind(this);\n  }\n\n  onOptionsChange(option, selected) {\n    if (selected) {\n      this.setState(prevState => {\n        prevState.selectedOptions.push(option);\n        return {\n          selectedOptions: prevState.selectedOptions\n        };\n      }, () => this.props.onOptionsChange(this.state.selectedOptions));\n    } else {\n      this.setState(prevState => {\n        const index = prevState.selectedOptions.indexOf(option);\n\n        if (index > -1) {\n          prevState.selectedOptions.splice(index, 1);\n        }\n\n        return {\n          selectedOptions: prevState.selectedOptions\n        };\n      }, () => this.props.onOptionsChange(this.state.selectedOptions));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Choose your Option\"), this.props.options.map((option, index) => /*#__PURE__*/React.createElement(Option, {\n      option: option,\n      onOptionChange: this.onOptionsChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\nexport default MultiSelect;","map":{"version":3,"sources":["C:/Users/vtkurt13/Documents/Emsig/Emsig_Cards/emsig-cards/src/components/MultiSelect.js"],"names":["React","Component","Option","MultiSelect","constructor","props","state","selectedOptions","onOptionsChange","bind","option","selected","setState","prevState","push","index","indexOf","splice","render","options","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACvCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAb;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDD,EAAAA,eAAe,CAACE,MAAD,EAASC,QAAT,EAAmB;AAChC,QAAIA,QAAJ,EAAc;AACZ,WAAKC,QAAL,CACEC,SAAS,IAAI;AACXA,QAAAA,SAAS,CAACN,eAAV,CAA0BO,IAA1B,CAA+BJ,MAA/B;AACA,eAAO;AACLH,UAAAA,eAAe,EAAEM,SAAS,CAACN;AADtB,SAAP;AAGD,OANH,EAOE,MAAM,KAAKF,KAAL,CAAWG,eAAX,CAA2B,KAAKF,KAAL,CAAWC,eAAtC,CAPR;AASD,KAVD,MAUO;AACL,WAAKK,QAAL,CACEC,SAAS,IAAI;AACX,cAAME,KAAK,GAAGF,SAAS,CAACN,eAAV,CAA0BS,OAA1B,CAAkCN,MAAlC,CAAd;;AACA,YAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdF,UAAAA,SAAS,CAACN,eAAV,CAA0BU,MAA1B,CAAiCF,KAAjC,EAAwC,CAAxC;AACD;;AACD,eAAO;AACLR,UAAAA,eAAe,EAAEM,SAAS,CAACN;AADtB,SAAP;AAGD,OATH,EAUE,MAAM,KAAKF,KAAL,CAAWG,eAAX,CAA2B,KAAKF,KAAL,CAAWC,eAAtC,CAVR;AAYD;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,GAAnB,CAAuB,CAACV,MAAD,EAASK,KAAT,kBACtB,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEL,MAAhB;AAAwB,MAAA,cAAc,EAAE,KAAKF,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAQD;;AA3CoC;AA8C3C,eAAeL,WAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport Option from './Option'\r\n \r\nexport class MultiSelect extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { selectedOptions: [] }\r\n        this.onOptionsChange = this.onOptionsChange.bind(this)\r\n      }\r\n    \r\n      onOptionsChange(option, selected) {\r\n        if (selected) {\r\n          this.setState(\r\n            prevState => {\r\n              prevState.selectedOptions.push(option)\r\n              return {\r\n                selectedOptions: prevState.selectedOptions,\r\n              }\r\n            },\r\n            () => this.props.onOptionsChange(this.state.selectedOptions)\r\n          )\r\n        } else {\r\n          this.setState(\r\n            prevState => {\r\n              const index = prevState.selectedOptions.indexOf(option)\r\n              if (index > -1) {\r\n                prevState.selectedOptions.splice(index, 1)\r\n              }\r\n              return {\r\n                selectedOptions: prevState.selectedOptions,\r\n              }\r\n            },\r\n            () => this.props.onOptionsChange(this.state.selectedOptions)\r\n          )\r\n        }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <fieldset>\r\n            <legend>Choose your Option</legend>\r\n            {this.props.options.map((option, index) => (\r\n              <Option option={option} onOptionChange={this.onOptionsChange} />\r\n            ))}\r\n          </fieldset>\r\n        )\r\n      }\r\n}\r\n\r\nexport default MultiSelect\r\n"]},"metadata":{},"sourceType":"module"}