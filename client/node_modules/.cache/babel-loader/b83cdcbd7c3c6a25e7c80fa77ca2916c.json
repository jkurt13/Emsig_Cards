{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtkurt13\\\\Documents\\\\Emsig\\\\Emsig_Cards\\\\emsig-cards\\\\src\\\\components\\\\ButtonCard.js\";\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nvar PrintTemplate = require('react-print');\n\nconst Sprite = styled.img`\n    width: 10em;\n    height: 10em;\n    display: none;\n`;\nconst Card = styled.div`\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    &:hover {\n        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22 )\n    }\n    -moz-user-select: none;\n    -website-user-select: none;\n    user-select: none;\n    -o-euser-select: none;\n`;\nexport default class ButtonCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      description: '',\n      buttonTag: '',\n      imageUrl: '',\n      toManyRequests: false,\n      imageLoading: true,\n      show: false\n    };\n\n    this.printElement = (elem, append, delimiter) => {\n      var domClone = elem.cloneNode(true);\n      var printSection = document.getElementById(\"printSection\");\n\n      if (!printSection) {\n        printSection = document.createElement(\"div\");\n        printSection.id = \"printSection\";\n        document.body.appendChild(printSection);\n      }\n\n      if (append !== true) {\n        printSection.innerHTML = \"\";\n      } else if (append === true) {\n        if (typeof delimiter === \"string\") {\n          printSection.innerHTML += delimiter;\n        } else if (typeof delimiter === \"object\") {\n          printSection.appendChild(delimiter);\n        }\n      }\n\n      printSection.appendChild(domClone);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name,\n      url,\n      description\n    } = this.props;\n    const buttonTag = url.split(\"/\")[url.split('/').length - 1];\n    const imageUrl = `https://github.com/jkurt13/Emsig_Cards/blob/master/src/pictures/${buttonTag}?raw=true`;\n    this.setState({\n      buttonTag,\n      description,\n      imageUrl,\n      name\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-sm-6 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card\",\n      onClick: () => this.setState({\n        show: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, this.state.name.toLowerCase().split(\" \").map(letter => letter.charAt(0).toUpperCase() + letter.substring(1)).join('')), /*#__PURE__*/React.createElement(Sprite, {\n      className: \"card-img-top rounded mx-auto mt-2\",\n      onError: () => this.setState({\n        toManyRequests: true\n      }),\n      src: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Sprite, {\n      className: \"card-img-top rounded mx-auto mt-2\",\n      onLoad: () => this.setState({\n        imageLoading: false\n      }),\n      onError: () => this.setState({\n        toManyRequests: true\n      }),\n      src: this.state.imageUrl,\n      style: this.state.toManyRequests ? {\n        display: \"none\"\n      } : this.state.imageLoading ? null : {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, this.state.description.slice(0, -4)))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: () => this.setState({\n        show: false\n      }),\n      animation: false,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, \"Card Number: \", this.state.name), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Print Image\",\n      onClick: this.printElement(this.state.imageUrl),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Description: \", this.state.description.slice(0, -4)), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      style: {\n        width: '48em',\n        height: '45em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vtkurt13/Documents/Emsig/Emsig_Cards/emsig-cards/src/components/ButtonCard.js"],"names":["React","Component","Modal","styled","PrintTemplate","require","Sprite","img","Card","div","ButtonCard","state","name","description","buttonTag","imageUrl","toManyRequests","imageLoading","show","printElement","elem","append","delimiter","domClone","cloneNode","printSection","document","getElementById","createElement","id","body","appendChild","innerHTML","componentDidMount","url","props","split","length","setState","render","toLowerCase","map","letter","charAt","toUpperCase","substring","join","display","slice","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nimport styled from 'styled-components'\r\n\r\nvar PrintTemplate = require('react-print')\r\n\r\n\r\nconst Sprite = styled.img`\r\n    width: 10em;\r\n    height: 10em;\r\n    display: none;\r\n`;\r\n\r\nconst Card = styled.div`\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n    &:hover {\r\n        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22 )\r\n    }\r\n    -moz-user-select: none;\r\n    -website-user-select: none;\r\n    user-select: none;\r\n    -o-euser-select: none;\r\n`;\r\n\r\nexport default class ButtonCard extends Component {\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        buttonTag: '',\r\n        imageUrl: '',\r\n        toManyRequests: false,\r\n        imageLoading: true,\r\n        show: false\r\n    }\r\n\r\n    printElement = (elem, append, delimiter) => {\r\n        var domClone = elem.cloneNode(true);\r\n    \r\n        var printSection = document.getElementById(\"printSection\");\r\n    \r\n        if (!printSection) {\r\n            printSection = document.createElement(\"div\");\r\n            printSection.id = \"printSection\";\r\n            document.body.appendChild(printSection);\r\n        }\r\n    \r\n        if (append !== true) {\r\n            printSection.innerHTML = \"\";\r\n        }\r\n    \r\n        else if (append === true) {\r\n            if (typeof (delimiter) === \"string\") {\r\n                printSection.innerHTML += delimiter;\r\n            }\r\n            else if (typeof (delimiter) === \"object\") {\r\n                printSection.appendChild(delimiter);\r\n            }\r\n        }\r\n    \r\n        printSection.appendChild(domClone);\r\n    }\r\n\r\n    componentDidMount () {\r\n\r\n        const { name, url, description } = this.props\r\n        const buttonTag = url.split(\"/\")[url.split('/').length - 1]\r\n        const imageUrl = `https://github.com/jkurt13/Emsig_Cards/blob/master/src/pictures/${buttonTag}?raw=true`\r\n\r\n        this.setState({\r\n            buttonTag,\r\n            description,\r\n            imageUrl,\r\n            name\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='col-md-3 col-sm-6 mb-5'>\r\n                <Card className='card' onClick={() =>this.setState({show: true})}>\r\n                <h5 className=\"card-header\">{this.state.name\r\n                        .toLowerCase()\r\n                        .split(\" \")\r\n                        .map(\r\n                            letter => letter.charAt(0).toUpperCase() + letter.substring(1))\r\n                            .join('')}\r\n                        </h5>\r\n                <Sprite \r\n                    className=\"card-img-top rounded mx-auto mt-2\"\r\n                    onError={() => this.setState({toManyRequests: true})}\r\n                    src={this.state.imageUrl}\r\n                />\r\n                <Sprite \r\n                        className=\"card-img-top rounded mx-auto mt-2\"\r\n                        onLoad={() => this.setState({imageLoading: false})}\r\n                        onError={() => this.setState({toManyRequests: true})}\r\n                        src={this.state.imageUrl}\r\n                        style={\r\n                            this.state.toManyRequests ? { display: \"none\"} : \r\n                            this.state.imageLoading ? null : {display: \"block\"}\r\n                        }\r\n                    />\r\n                <div className='card-body mx-auto'>\r\n                    <h6 className=\"card-title\">{this.state.description.slice(0, -4)}</h6>\r\n                    </div>\r\n                </Card>\r\n                <Modal show={this.state.show} onHide={()=>this.setState({show: false})} animation={false} size='lg'>\r\n                    <Modal.Header closeButton>\r\n                            <h4>Card Number: {this.state.name}</h4>\r\n                            <input type='button' value='Print Image' onClick={this.printElement(this.state.imageUrl)}></input>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <h4>Description: {this.state.description.slice(0, -4)}</h4>                   \r\n\r\n                            <img src={this.state.imageUrl} style={{width: '48em', height:'45em'}}/>\r\n                    </Modal.Body>\r\n                    \r\n                 </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}