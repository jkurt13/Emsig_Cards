{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtkurt13\\\\Documents\\\\Emsig\\\\Emsig_Cards\\\\emsig-cards\\\\src\\\\components\\\\ButtonList.js\";\nimport React, { Component } from 'react';\nimport { MDBInput } from 'mdbreact';\nimport axios from 'axios';\nimport ButtonCard from './ButtonCard';\nexport default class ButtonList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: \"http://localhost:3000/users\",\n      button: null,\n      search: '',\n      cardChecked: ['Hi']\n    };\n\n    this.onchange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.renderButton = button => {\n      if (this.state.button.length <= 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 20\n          }\n        }, \"Loading..\");\n      }\n\n      const {\n        search\n      } = this.state;\n      let combine = button.name + ' ' + button.description; // if(search !== \"\" && button.name.toLowerCase().indexOf(search.toLowerCase()) === -1 && button.description.toLowerCase().indexOf(search.toLowerCase()) === -1){\n      //     return null;\n      // }\n\n      if (search !== \"\" && combine.toLowerCase().indexOf(search.toLowerCase()) === -1) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(ButtonCard, {\n        key: button.name,\n        name: button.name,\n        url: button.url,\n        description: button.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      });\n    };\n  }\n\n  checkCard(button, e) {\n    let cardChecked = this.state.cardChecked;\n    cardChecked[button.name] = e.target.checked;\n    this.setState({\n      cardChecked: button\n    });\n    console.log(cardChecked);\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(this.state.url);\n    this.setState({\n      button: res.data['data']\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      icon: \"search\",\n      type: \"text\",\n      hint: \"Search\",\n      onChange: this.onchange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"textarea\",\n      disabled: true,\n      label: \"compress\",\n      placeholder: this.state.cardChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, this.state.button ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, this.state.button.map(button => {\n      return this.renderButton(button);\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Loading Buttons\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vtkurt13/Documents/Emsig/Emsig_Cards/emsig-cards/src/components/ButtonList.js"],"names":["React","Component","MDBInput","axios","ButtonCard","ButtonList","state","url","button","search","cardChecked","onchange","e","setState","target","value","renderButton","length","combine","name","description","toLowerCase","indexOf","checkCard","checked","console","log","componentDidMount","res","get","data","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { MDBInput } from 'mdbreact'\r\nimport axios from 'axios';\r\n\r\nimport ButtonCard from './ButtonCard'\r\n\r\nexport default class ButtonList extends Component {\r\n\r\n    state= {\r\n        url: \"http://localhost:3000/users\",\r\n        button: null,\r\n        search: '',\r\n        cardChecked: ['Hi']\r\n\r\n    }\r\n\r\n    onchange = e => {\r\n        this.setState({search: e.target.value})\r\n        \r\n    }\r\n\r\n    checkCard(button, e){\r\n        let cardChecked = this.state.cardChecked\r\n        cardChecked[button.name] = e.target.checked\r\n        this.setState({cardChecked: button});\r\n        console.log(cardChecked)\r\n    }\r\n\r\n    renderButton = button => {\r\n        if (this.state.button.length <= 0) {\r\n            return <div>Loading..</div>\r\n        }\r\n\r\n        const {search} = this.state\r\n\r\n        let combine = button.name + ' ' + button.description\r\n        \r\n        // if(search !== \"\" && button.name.toLowerCase().indexOf(search.toLowerCase()) === -1 && button.description.toLowerCase().indexOf(search.toLowerCase()) === -1){\r\n        //     return null;\r\n        // }\r\n\r\n        if(search !== \"\" && combine.toLowerCase().indexOf(search.toLowerCase()) === -1 ){\r\n            return null;\r\n        }\r\n\r\n        return (\r\n        <ButtonCard\r\n            key={button.name}\r\n            name={button.name}\r\n            url={button.url} \r\n            description={button.description}\r\n        />)\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(this.state.url);\r\n        this.setState({button: res.data['data']});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div className='row' >\r\n                    <div className='col'>\r\n                        <MDBInput icon=\"search\" type='text' hint='Search' onChange={this.onchange}/>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <MDBInput type='textarea' disabled label='compress' placeholder={this.state.cardChecked}></MDBInput>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                {this.state.button ? (\r\n                    <div className='row'>\r\n                        {this.state.button.map(button => {\r\n                            return this.renderButton(button)\r\n                            \r\n                            \r\n                        })}\r\n                    </div>\r\n                    \r\n                ) : (\r\n                    <h1>Loading Buttons</h1>\r\n                    )}\r\n                    </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}